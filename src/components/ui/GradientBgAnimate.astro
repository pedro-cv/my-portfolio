---
import { cn } from "@/lib/utils";

// Astro component script
const interactive = true;
const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
---

<div
  class={cn(
    "w-full h-full absolute overflow-hidden top-0 left-0 bg-[linear-gradient(40deg,var(--gradient-background-start),var(--gradient-background-end))]"
  )}
>
  <svg class="hidden">
    <defs>
      <filter id="blurMe">
        <feGaussianBlur in="SourceGraphic" stdDeviation="10" result="blur"
        ></feGaussianBlur>
        <feColorMatrix
          in="blur"
          mode="matrix"
          values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -8"
          result="goo"></feColorMatrix>
        <feBlend in="SourceGraphic" in2="goo"></feBlend>
      </filter>
    </defs>
  </svg>
  <slot />
  <div
    class={cn(
      "gradients-container h-full w-full blur-lg",
      isSafari ? "blur-2xl" : "[filter:url(#blurMe)_blur(40px)]"
    )}
  >
    <div
      class={cn(
        `absolute [background:radial-gradient(circle_at_center,_var(--first-color)_0,_var(--first-color)_50%)_no-repeat]`,
        `[mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)]`,
        `[transform-origin:center_center]`,
        `animate-first`,
        `opacity-100`
      )}
    >
    </div>
    <div
      class={cn(
        `absolute [background:radial-gradient(circle_at_center,_rgba(var(--second-color),_0.8)_0,_rgba(var(--second-color),_0)_50%)_no-repeat]`,
        `[mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)]`,
        `[transform-origin:calc(50%-400px)]`,
        `animate-second`,
        `opacity-100`
      )}
    >
    </div>
    <div
      class={cn(
        `absolute [background:radial-gradient(circle_at_center,_rgba(var(--third-color),_0.8)_0,_rgba(var(--third-color),_0)_50%)_no-repeat]`,
        `[mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)]`,
        `[transform-origin:calc(50%+400px)]`,
        `animate-third`,
        `opacity-100`
      )}
    >
    </div>
    <div
      class={cn(
        `absolute [background:radial-gradient(circle_at_center,_rgba(var(--fourth-color),_0.8)_0,_rgba(var(--fourth-color),_0)_50%)_no-repeat]`,
        `[mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)]`,
        `[transform-origin:calc(50%-200px)]`,
        `animate-fourth`,
        `opacity-70`
      )}
    >
    </div>
    <div
      class={cn(
        `absolute [background:radial-gradient(circle_at_center,_rgba(var(--fifth-color),_0.8)_0,_rgba(var(--fifth-color),_0)_50%)_no-repeat]`,
        `[mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)]`,
        `[transform-origin:calc(50%-800px)_calc(50%+800px)]`,
        `animate-fifth`,
        `opacity-100`
      )}
    >
    </div>

    <div
      class={cn(
        `interactive absolute [background:radial-gradient(circle_at_center,_rgba(var(--pointer-color),_0.8)_0,_rgba(var(--pointer-color),_0)_50%)_no-repeat]`,
        `[mix-blend-mode:var(--blending-value)] w-full h-full -top-1/2 -left-1/2`,
        `opacity-70`
      )}
    >
    </div>
  </div>
</div>

<script>
  const gradientBackgroundStart = "rgb(108, 0, 162)";
  const gradientBackgroundEnd = "rgb(0, 17, 82)";
  const firstColor = "18, 113, 255";
  const secondColor = "221, 74, 255";
  const thirdColor = "100, 220, 255";
  const fourthColor = "200, 50, 50";
  const fifthColor = "180, 180, 50";
  const pointerColor = "140, 100, 255";
  const size = "80%";
  const blendingValue = "hard-light";
  let curX = { value: 0 };
  let curY = { value: 0 };
  let tgX = { value: 0 };
  let tgY = { value: 0 };

  const updateColors = () => {
    document.body.style.setProperty(
      "--gradient-background-start",
      gradientBackgroundStart
    );
    document.body.style.setProperty(
      "--gradient-background-end",
      gradientBackgroundEnd
    );
    document.body.style.setProperty("--first-color", firstColor);
    document.body.style.setProperty("--second-color", secondColor);
    document.body.style.setProperty("--third-color", thirdColor);
    document.body.style.setProperty("--fourth-color", fourthColor);
    document.body.style.setProperty("--fifth-color", fifthColor);
    document.body.style.setProperty("--pointer-color", pointerColor);
    document.body.style.setProperty("--size", size);
    document.body.style.setProperty("--blending-value", blendingValue);
  };

  const moveElement = (element: HTMLDivElement) => {
    curX.value += (tgX.value - curX.value) / 20;
    curY.value += (tgY.value - curY.value) / 20;
    if (element) {
      element.style.transform = `translate(${Math.round(curX.value)}px, ${Math.round(curY.value)}px)`;
    }
  };

  const handleMouseMove = (event: MouseEvent) => {
    const interactiveRef = document.querySelector(".interactive");
    if (interactiveRef) {
      const rect = interactiveRef.getBoundingClientRect();
      tgX.value = event.clientX - rect.left;
      tgY.value = event.clientY - rect.top;
      moveElement(interactiveRef as HTMLDivElement);
    }
  };

  document.addEventListener("mousemove", handleMouseMove);
  updateColors();
</script>
